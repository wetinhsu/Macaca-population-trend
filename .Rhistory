mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(N = n(), E = sum(Macaca_sur)/n()) %>%
group_by(Altitude_f) %>%
summarise(mean_N = mean(N),  y = quantile(E,0.75))
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
ggplot(., aes(x = Altitude_f, y = E)) +
geom_boxplot(size = 1, width = 0.4, fill= gray(.9))+
geom_text(data = Alt.d.n, aes(y = y+0.0025,label = paste0(mean_N,c("","","","","","",""))),
size = 4,
hjust = -0.1,
position = position_dodge(0.9))+
scale_y_continuous(breaks = seq(0,0.10,0.02), limits = c(0,0.10))+
labs(x = "Elevation (m)", y = "Encounter rate (troop/point)") +
theme(
text = element_text(family="serif"),
panel.border = element_rect(size = 1.5,fill = NA),
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 14,colour = "black"),
axis.title = element_text(size = 18,colour = "black",
vjust = -2, hjust = 0.5)
)
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
group_by(Altitude_f) %>% #確認中位數
summarise(mid = median(E))
#-----------
#Altitude的Encounter_rate
Alt.d.n <-
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(N = n(), E = sum(Macaca_sur)/n()) %>%
group_by(Altitude_f) %>%
summarise(mean_N = mean(N),  y = quantile(E,0.75))
Alt.d.n
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
ggplot(., aes(x = Altitude_f, y = E)) +
geom_boxplot(size = 1, width = 0.4, fill= gray(.9))+
geom_text(data = Alt.d.n, aes(y = y+0.0025,label = paste0(mean_N,c("","","","","","",""))),
size = 4,
hjust = -0.1,
position = position_dodge(0.9))+
scale_y_continuous(breaks = seq(0,0.10,0.02), limits = c(0,0.10))+
labs(x = "Elevation (m)", y = "Encounter rate (troop/point)") +
theme(
text = element_text(family="serif"),
panel.border = element_rect(size = 1.5,fill = NA),
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 14,colour = "black"),
axis.title = element_text(size = 18,colour = "black",
vjust = -2, hjust = 0.5)
)
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n())
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n())
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
boxplot(E ~ factor(Altitude_f), data = .)
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
boxplot(E ~ factor(Altitude_f), data = ., plot=F)
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
boxplot(E ~ factor(Altitude_f), data = ., plot=F)
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
ggplot(., aes(x = Altitude_f, y = E)) +
geom_boxplot(size = 1, width = 0.4, fill= gray(.9))+
geom_text(data = Alt.d.n, aes(y = y+0.0025,label = paste0(mean_N,c("","","","","","",""))),
size = 4,
hjust = -0.1,
position = position_dodge(0.9))+
scale_y_continuous(breaks = seq(0,0.10,0.02), limits = c(0,0.10))+
labs(x = "Elevation (m)", y = "Encounter rate (troop/point)") +
theme(
text = element_text(family="serif"),
panel.border = element_rect(size = 1.5,fill = NA),
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 14,colour = "black"),
axis.title = element_text(size = 18,colour = "black",
vjust = -2, hjust = 0.5)
)
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
boxplot(E ~ factor(Altitude_f), data = .)
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
ggplot(., aes(x = Altitude_f, y = E)) +
geom_boxplot(size = 1, width = 0.4, fill= gray(.9))+
geom_text(data = Alt.d.n, aes(y = y+0.0025,label = paste0(mean_N,c("","","","","","",""))),
size = 4,
hjust = -0.1,
position = position_dodge(0.9))+
scale_y_continuous(breaks = seq(0,0.10,0.02), limits = c(0,0.10))+
labs(x = "Elevation (m)", y = "Encounter rate (troop/point)") +
theme(
text = element_text(family="serif"),
panel.border = element_rect(size = 1.5,fill = NA),
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 14,colour = "black"),
axis.title = element_text(size = 18,colour = "black",
vjust = -2, hjust = 0.5)
)
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n())
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
write.csv(., "D:/待處理工作夾(做完要歸檔)/fff.csv
")
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
write.csv(., "D:/待處理工作夾(做完要歸檔)/fff.csv")
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
ggplot(., aes(x = Altitude_f, y = E)) +
geom_boxplot(size = 1, width = 0.4, fill= gray(.9))+
geom_text(data = Alt.d.n, aes(y = y+0.0025,label = paste0(mean_N,c("","","","","","",""))),
size = 4,
hjust = -0.1,
position = position_dodge(0.9))+
scale_y_continuous(breaks = seq(0,0.10,0.02), limits = c(0,0.10))+
labs(x = "海拔 (m)", y = "相對密度 (猴群數/樣點)") +
theme(
text = element_text(family="serif"),
panel.border = element_rect(size = 1.5,fill = NA),
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 14,colour = "black"),
axis.title = element_text(size = 18,colour = "black",
vjust = -2, hjust = 0.5)
)
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
ggplot(., aes(x = Altitude_f, y = E)) +
geom_boxplot(size = 1, width = 0.4, fill= gray(.9))+
geom_text(data = Alt.d.n, aes(y = y+0.0025,label = paste0(mean_N,c("","","","","","",""))),
size = 4,
hjust = -0.1,
position = position_dodge(0.9))+
scale_y_continuous(breaks = seq(0,0.10,0.02), limits = c(0,0.10))+
labs(x = "海拔 (m)", y = "    ") +
theme(
text = element_text(family="serif"),
panel.border = element_rect(size = 1.5,fill = NA),
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 14,colour = "black"),
axis.title = element_text(size = 18,colour = "black",
vjust = -2, hjust = 0.5)
)
M.data %>%
filter(analysis %in% "Y") %>%
mutate(Altitude_f =cut(Altitude,
breaks = c(seq(0,4000,500)),
labels = c(seq(250,3750,500)),
include.lowest = T) ) %>%
group_by(Altitude_f,Survey) %>%
summarise(E = sum(Macaca_sur)/n()) %>%
ggplot(., aes(x = Altitude_f, y = E)) +
geom_boxplot(size = 1, width = 0.4, fill= gray(.9))+
geom_text(data = Alt.d.n, aes(y = y+0.0025,label = paste0(mean_N,c("","","","","","",""))),
size = 4,
hjust = -0.1,
position = position_dodge(0.9))+
scale_y_continuous(breaks = seq(0,0.10,0.02), limits = c(0,0.10))+
labs(x = "   ", y = "    ") +
theme(
text = element_text(family="serif"),
panel.border = element_rect(size = 1.5,fill = NA),
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 14,colour = "black"),
axis.title = element_text(size = 18,colour = "black",
vjust = -2, hjust = 0.5)
)
#樣點資料檢核
#---- load library
library(tidyverse)
library(readxl)
library(writexl)
library(sf)
S20<-
lapply(paste0("./data/raw/FORESTRYdata/", 2021), function(x){
list.files(x, full.names = T) %>%  #讀取各2020資料夾內的excel檔名
lapply(., function(x){
x %>%
excel_sheets(.) %>%   #讀取各excel內的sheet名
lapply(.,read_excel, path = x,
col_names = T, col_type = "text", cell_cols("B:S")) %>%  #讀取各sheet的內容
bind_rows()
})
}) %>%
bind_rows() %>%
select(Office = `林管處`,
Station = `工作站`,
Site_N = `樣區編號`,
Year = `年`,
Month = `月`,
Day = `日`,
Survey = `旅次`,
Surveyor = `調查者`,
Point = `樣點編號`,
TWD97_X = `X座標(TWD97)`,
TWD97_Y = `Y座標(TWD97)`,
Hour = `時`,
Minute = `分`,
Macaca_sur = `數量`,
Macaca_dist = `距離`,
Macaca_voice = `叫聲`,
Habitat = `棲地類型(主要)`) %>%
mutate(Surveyor = gsub(",","、", Surveyor)) %>%
mutate(Surveyor = gsub(" ","", Surveyor)) %>%
mutate(Macaca_voice = gsub("n","N", .$Macaca_voice)) %>%
mutate(Macaca_voice = ifelse(Macaca_sur %in% 0 & Macaca_voice %in% c("N"), NA,  Macaca_voice)) %>%
mutate(Date = ISOdatetime(Year, Month, Day, Hour, Minute, sec = 0) ) %>%
mutate(Office = ordered(Office, c("羅東", "新竹", "東勢", "南投", "嘉義", "屏東", "花蓮", "臺東")))
#調查者的統計資料
List_surveyor <-
S20 %>%
separate(.,Surveyor,
into = paste0("Surveyor","_",0:10),
sep ="、|,", extra = "drop", fill = "right") %>%
reshape2::melt(., id.vars = c("Office","Year", "Site_N", "Point",  "Survey"),
measure.vars = paste0("Surveyor","_",0:10),
variable.name = "Surveyor", value.name = "Name",)%>%
filter(!is.na(Name))
List_surveyor %>%
mutate(SP = paste0(Site_N, "-", Point)) %>%
group_by(Office) %>%
summarise(Site_n = Site_N %>% unique %>% length,     #樣區數
Person_n = Name %>% unique %>% length)  #人數
DF<-
lapply(paste0("./data/raw/FORESTRYdata/", 2020:2021), function(x){
list.files(x, full.names = T) %>%  #讀取各2020資料夾內的excel檔名
lapply(., function(x){
x %>%
excel_sheets(.) %>%   #讀取各excel內的sheet名
lapply(.,read_excel, path = x,
col_names = T, col_type = "text", cell_cols("B:S")) %>%  #讀取各sheet的內容
bind_rows()
})
}) %>%
bind_rows() %>%
select(Office = `林管處`,
Station = `工作站`,
Site_N = `樣區編號`,
Year = `年`,
Month = `月`,
Day = `日`,
Survey = `旅次`,
Surveyor = `調查者`,
Point = `樣點編號`,
TWD97_X = `X座標(TWD97)`,
TWD97_Y = `Y座標(TWD97)`,
Hour = `時`,
Minute = `分`,
Macaca_sur = `數量`,
Macaca_dist = `距離`,
Macaca_voice = `叫聲`,
Habitat = `棲地類型(主要)`) %>%
mutate(Surveyor = gsub(",","、", Surveyor)) %>%
mutate(Surveyor = gsub(" ","", Surveyor)) %>%
mutate(Macaca_voice = gsub("n","N", .$Macaca_voice)) %>%
mutate(Macaca_voice = ifelse(Macaca_sur %in% 0 & Macaca_voice %in% c("N"), NA,  Macaca_voice)) %>%
mutate(Date = ISOdatetime(Year, Month, Day, Hour, Minute, sec = 0) ) %>%
mutate(Office = ordered(Office, c("羅東", "新竹", "東勢", "南投", "嘉義", "屏東", "花蓮", "臺東")))
#調查者的統計資料
List_surveyor <-
DF %>%
separate(.,Surveyor,
into = paste0("Surveyor","_",0:10),
sep ="、|,", extra = "drop", fill = "right") %>%
reshape2::melt(., id.vars = c("Office","Year", "Site_N", "Point",  "Survey"),
measure.vars = paste0("Surveyor","_",0:10),
variable.name = "Surveyor", value.name = "Name",)%>%
filter(!is.na(Name))
View(List_surveyor)
List_surveyor %>%
mutate(SP = paste0(Site_N, "-", Point)) %>%
group_by(Year, Office) %>%
summarise(Site_n = Site_N %>% unique %>% length,     #樣區數
Person_n = Name %>% unique %>% length)  #人數
List_surveyor %>%
mutate(SP = paste0(Site_N, "-", Point)) %>%
group_by(Year, Office) %>%
summarise(Site_n = Site_N %>% unique %>% length,     #樣區數
Person_n = Name %>% unique %>% length) %>%  #人數
arrange(Office)
DF %>%
filter(Office %in% 花蓮) %>%
group_by(year, Site_N) %>%
summarise(N = n())
DF %>%
filter(Office %in% "花蓮") %>%
group_by(year, Site_N) %>%
summarise(N = n())
DF %>%
filter(Office %in% "花蓮") %>%
group_by(Year, Site_N) %>%
summarise(N = n())
DF %>%
filter(Office %in% "花蓮") %>%
group_by(Year, Site_N) %>%
summarise(N = n()) %>%
reshape2::dcast(  Site_N ~ Year, value.var = "N")
List_surveyor %>%
mutate(SP = paste0(Site_N, "-", Point)) %>%
group_by(Year, Office) %>%
summarise(Site_n = Site_N %>% unique %>% length,     #樣區數
Person_n = Name %>% unique %>% length) %>%  #人數
arrange(Office)
#樣點資料檢核
#---- load library
library(tidyverse)
library(readxl)
library(writexl)
DF<-
lapply(paste0("./data/raw/FORESTRYdata/", 2020:2021), function(x){
list.files(x, full.names = T) %>%  #讀取各2020資料夾內的excel檔名
lapply(., function(x){
x %>%
excel_sheets(.) %>%   #讀取各excel內的sheet名
lapply(.,read_excel, path = x,
col_names = T, col_type = "text", cell_cols("B:S")) %>%  #讀取各sheet的內容
bind_rows()
})
}) %>%
bind_rows() %>%
select(Office = `林管處`,
Station = `工作站`,
Site_N = `樣區編號`,
Year = `年`,
Month = `月`,
Day = `日`,
Survey = `旅次`,
Surveyor = `調查者`,
Point = `樣點編號`,
TWD97_X = `X座標(TWD97)`,
TWD97_Y = `Y座標(TWD97)`,
Hour = `時`,
Minute = `分`,
Macaca_sur = `數量`,
Macaca_dist = `距離`,
Macaca_voice = `叫聲`,
Habitat = `棲地類型(主要)`) %>%
mutate(Surveyor = gsub(",","、", Surveyor)) %>%
mutate(Surveyor = gsub(" ","", Surveyor)) %>%
mutate(Macaca_voice = gsub("n","N", .$Macaca_voice)) %>%
mutate(Macaca_voice = ifelse(Macaca_sur %in% 0 & Macaca_voice %in% c("N"), NA,  Macaca_voice)) %>%
mutate(Date = ISOdatetime(Year, Month, Day, Hour, Minute, sec = 0) ) %>%
mutate(Office = ordered(Office, c("羅東", "新竹", "東勢", "南投", "嘉義", "屏東", "花蓮", "臺東")))
#調查者的統計資料
List_surveyor <-
DF %>%
separate(.,Surveyor,
into = paste0("Surveyor","_",0:10),
sep ="、|,", extra = "drop", fill = "right") %>%
reshape2::melt(., id.vars = c("Office","Year", "Site_N", "Point",  "Survey"),
measure.vars = paste0("Surveyor","_",0:10),
variable.name = "Surveyor", value.name = "Name",)%>%
filter(!is.na(Name))
List_surveyor %>%
mutate(SP = paste0(Site_N, "-", Point)) %>%
group_by(Office, Office) %>%
summarise(Site_n = Site_N %>% unique %>% length,     #樣區數
Person_n = Name %>% unique %>% length) %>%  #人數
arrange(Office)
List_surveyor %>%
mutate(SP = paste0(Site_N, "-", Point)) %>%
group_by(Year, Office) %>%
summarise(Site_n = Site_N %>% unique %>% length,     #樣區數
Person_n = Name %>% unique %>% length) %>%  #人數
arrange(Office)
M.Point <- read_excel("./data/refer/林務局_樣點資訊.xlsx"),
sheet = "樣點表", cell_cols("A:M") )
M.Point <- read_excel("./data/refer/林務局_樣點資訊.xlsx",
sheet = "樣點表", cell_cols("A:M") )
View(M.Point)
M.Point <- read_excel("./data/refer/林務局_樣點資訊.xlsx")
M.Point <- read_excel("./data/refer/林務局_樣點資訊.xlsx")
View(M.Point)
M.Point <- read_excel("./data/refer/林務局_樣點資訊.xlsx") %>%
select(str_subset(colnames(.), "Site|97|備註|註記"))
M.Point <- read_excel("./data/refer/林務局_樣點資訊.xlsx") %>%
select(str_subset(colnames(.), "編號|Site|97|備註|註記"))
M.Point <- read_excel("./data/refer/林務局_樣點資訊.xlsx") %>%
select(str_subset(colnames(.), "編號|代號|Site|97|備註|註記"))
M.Point <- read_excel("./data/refer/林務局_樣點資訊.xlsx") %>%
select(str_subset(colnames(.), "編號|代號|Site|97|備註|註記")) %>%
filter(!is.na(X.97)|!is.na(Y.97))
#----------------
#read forest spatial data, merge polgons by TypeName, area by TypeName
path <- "D:/R/test/第四次森林資源調查全島森林林型分布圖"
# path <- "C:/Users/wetin/Desktop/R/第四次森林資源調查全島森林林型分布圖"
nc <- st_read(paste0(path,"/","全島森林林型分布圖.shp"),
crs=3826) %>%
arrange(TypeName, st_geometry_type(geometry), FunctionTy,Function)
nc.b <-
nc %>%
filter(!TypeName %in% c("待成林地", "裸露地", "陰影"))
#----
